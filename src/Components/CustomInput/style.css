.inputWrapper {
  margin-bottom: 1rem;
  /* margin-top: 1.75rem; */
  position: relative;
  box-sizing: border-box;
  min-width: 180px;
}

.inputWrapper label {
  margin-left: 4px;
  color: var(--secondaryColor);
  font-size: 15px;
  font-style: normal;
  /* user-select: none; */
  transition: color 0.2s;
}
.mainInput::placeholder {
  color: var(--grayColorDark);
}
.mainInput,
.react-tel-input .form-control.mainInput {
  width: 100%;
  height: auto;
  padding: 12px 12px 12px 16px;
  margin-top: 2px;
  border-width: 1px;
  border-style: solid;
  /* border-color: transparent; */
  /* border-color: var(--secondary-text-color); */
  border-color: rgba(100, 100, 100, 0.22);
  border-radius: 5px;
  color: var(--blackColor);
  background-color: var(--whiteColor);
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  outline: none;
  box-sizing: border-box;
  transition: all 0.2s;
}
.mainInput:disabled {
  background-color: var(--grayColor) !important;
}
.tableInputs {
  width: 180px;
  background-color: var(--whiteColor) !important;
}
.tableSearch {
  width: unset;
}
.mainInput:focus,
.react-tel-input .form-control.mainInput:focus {
  border-color: var(--primaryColor);
  box-shadow: none;
}
.PhoneInput--focus {
  border-color: var(--primaryColor) !important;
  box-shadow: none;
}
.loginInput {
  color: var(--blackColor);
}
.loginInput::placeholder {
  color: var(--grayColorDark) !important;
}
.loginInput:focus {
  border-color: var(--primaryColor);
  box-shadow: none;
}

/* .inputWrapper:focus-within label,
.inputWrapper:focus-within .right-icon {
  color: var(--primaryColor);
} */
.passwordWrapper {
  position: relative;
}
/* Password input styles handled by paddingRight class */
.input-icon {
  padding: 10px 25px 10px 35px;
  font-size: 15px;
  width: 100%;
  resize: none;
  border-radius: 14px;
  border: 1px solid #f7ece8;
  background: #fff;
  box-shadow: 0px 4px 4px 0px rgba(247, 236, 232, 0.29);
  outline: none;
}
.right-icon {
  cursor: pointer;
  position: absolute;
  right: 16px;
  font-size: 1rem;
  background: none;
  border: none;
  line-height: 1;
  color: var(--secondaryColor);
  transition: color 0.15s;
}
.left-icon {
  /* cursor: pointer; */
  position: absolute;
  left: 16px;
  font-size: 1rem;
  background: none;
  border: none;
  line-height: 1;
  color: var(--secondaryColor);
  transition: color 0.15s;
}
.paddingRight {
  padding-right: 3rem !important;
}

.paddingLeft {
  padding-left: 3rem !important;
}
.PhoneInputInput {
  background: transparent;
  border: none;
}
.PhoneInput {
  padding-bottom: 10px !important;
}
.PhoneInputInput:focus-visible {
  border: none !important;
  outline: none;
}
.input-error-message {
  color: var(--redColor);
  font-size: 14px;
}
@media screen and (max-width: 991px) {
  .inputWrapper label {
    font-size: 14px;
    left: 14px;
  }
  .mainInput {
    padding: 10px 16px;
    font-size: 14px;
  }
  .react-tel-input .form-control.mainInput {
    font-size: 14px;
  }
  .PhoneInput {
    padding: 8px 22px;
  }
}

@media screen and (max-width: 767px) {
  .inputWrapper label {
    font-size: 13px;
  }
  .mainInput {
    padding: 8px 12px;
    font-size: 13px;
  }
  .react-tel-input .form-control.mainInput {
    font-size: 13px;
    padding: 8px 12px;
  }

  .mainInput:has(+ .right-icon) {
    padding-right: 30px;
  }
}
@media screen and (max-width: 575px) {
  .inputWrapper label {
    left: 6px;
  }
  .mainInput {
    padding: 8px;
  }
}
@media screen and (max-width: 320px) {
  .inputWrapper {
    min-width: 120px;
    width: 100%;
  }
}

.mainInput__value-container {
  padding: 6px 12px 6px 12px !important;
  margin-top: 2px;
  border-width: 1px;
  border-style: solid;
  border-color: rgba(100, 100, 100, 0.22);
  border-radius: 5px;
  color: var(--blackColor);
  background-color: var(--whiteColor);
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  outline: none;
  box-sizing: border-box;
  transition: all 0.2s;
}

.mainInput__control.mainInput__control--is-focused {
  border-color: var(--primaryColor) !important;
  box-shadow: none !important;
}

.mainInput__option.mainInput__option--is-focused {
  background-color: var(--grayColorLight) !important;
}